{"version":3,"sources":["config.js","services/remainders.js","components/LoginForm.jsx","components/AlertForm.jsx","components/Actions.jsx","components/DCard.jsx","components/DataGrid.jsx","components/SearchForm.jsx","components/LoggedInForm.jsx","components/Header.jsx","components/Footer.jsx","services/login.jsx","controllers/errorctrl.jsx","App.js","index.js"],"names":["exportApi","api_url","window","API_URL","baseUrl","config","token","getAsyncLatest","a","headers","Authorization","axios","get","response","data","console","log","getSearch","filt","exportPackage","getLatest","then","setToken","newToken","LoginForm","hLog","setUsername","setPass","Form","className","onSubmit","Group","Label","Control","id","placeholder","onChange","target","value","type","Button","AlertForm","setShow","success","loginMsg","Alert","variant","onClose","transition","dismissible","Heading","Actions","user","show","Container","Row","Col","DCard","rm","idx","Card","Body","Text","to","title","message","updated_at","DataGrid","rem","Array","isArray","xs","md","lg","map","r","Date","SearchForm","search","setFlt","controlId","LoggedInForm","uname","Header","logout","Navbar","Brand","href","Toggle","Collapse","onClick","Footer","login","credentials","post","errorManage","error","alert","App","useState","remainders","setRemainders","filtr","setFiltr","username","password","setPassword","setUser","setSuccess","setLoginMsg","useEffect","fetchRemainders","loggedUserJSON","localStorage","getItem","usr","JSON","parse","remindServe","refreshRemind","handleLogin","event","preventDefault","kaytt","loginService","setItem","stringify","tempRemind","removeItem","location","reload","catch","e","errorManager","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bff828e7.chunk.js","sourcesContent":["const envSettings = window;\r\nconst api_url = envSettings.API_URL;\r\n\r\nconst exportApi =  {api_url};\r\n\r\nexport default exportApi;","import axios from 'axios';\r\n\r\nimport config from '../config'\r\n\r\n// perusurl, josta johdetaan funktioiden osoitteet, ja token-muuttuja.\r\nconst baseUrl = config.api_url + '/api/v1';\r\nlet token = null;\r\n\r\n// asettaa käyttäjälle annetun tokenin\r\nconst setToken = (newToken) => {\r\n  token = `Bearer ${newToken}`;\r\n};\r\n\r\n// hakee viimeisimmät muistutukset\r\nconst getLatest = () => {\r\n  const request = axios.get(`${baseUrl}/latest`);\r\n\r\n  return request.then((response) => response.data);\r\n};\r\n\r\n// asynkronoitu haku viimeisimmille muistutuksille\r\nconst getAsyncLatest = async () => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/latest`, config);\r\n    return response.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  \r\n};\r\n\r\n// hakee muistutuksista kriteerin täyttäviä.\r\nconst getSearch = async (filt) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.get(`${baseUrl}/search/${filt}`, config);\r\n  console.log(\"search:\" + response);\r\n  return response.data;\r\n};\r\n\r\nconst exportPackage = {\r\n  getLatest, getSearch, setToken, getAsyncLatest,\r\n};\r\n\r\nexport default exportPackage;\r\n","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst LoginForm = ({ hLog, setUsername, setPass }) => (\r\n  <Form className=\"position-center\" onSubmit={hLog}>\r\n    <Form.Group className=\"mb-3\">\r\n      <Form.Label className=\"mt-1\">Käyttäjä</Form.Label>\r\n      <Form.Control id=\"username\" placeholder=\"käyttäjänimi\" onChange={({ target }) => setUsername(target.value)} />\r\n    </Form.Group>\r\n    <Form.Group className=\"mb-3\">\r\n      <Form.Label className=\"mt-1\">Salasana</Form.Label>\r\n      <Form.Control id=\"password\" type=\"password\" placeholder=\"salasana\" onChange={({ target }) => setPass(target.value)} />\r\n    </Form.Group>\r\n    <Button id=\"login\" className=\"mb-3\" type=\"submit\">Kirjaudu</Button>\r\n  </Form>\r\n);\r\n\r\nexport default LoginForm;\r\n","/* eslint-disable consistent-return */\r\nimport React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n// tämä osa ilmoittaa onnistuneesta tai virheellisestä kirjautumisesta.\r\nconst AlertForm = ({ setShow, success, loginMsg }) => {\r\n  if (!success) {\r\n    return (\r\n      <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n        <Alert.Heading>Virhe!</Alert.Heading>\r\n        <p>{loginMsg}</p>\r\n      </Alert>\r\n    );\r\n  } if (success) {\r\n    return (\r\n      <Alert variant=\"success\" onClose={() => setShow(false)} transition dismissible>\r\n        <Alert.Heading>Onnistui</Alert.Heading>\r\n        <p>{loginMsg}</p>\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AlertForm;\r\n","import React from 'react';\r\nimport {\r\n  Container, Col, Row,\r\n} from 'react-bootstrap';\r\nimport LoginForm from './LoginForm';\r\nimport AlertForm from './AlertForm';\r\n\r\n// Actions-komponentti. sisältää kirjautumisen virhe/onnistumisilmoituksen ja varsinaisen kirjautumisikkunan\r\nconst Actions = ({\r\n  hLog, setUsername, setPass, user, show, setShow, success, loginMsg\r\n}) => (\r\n  <Container id=\"actionform\">\r\n    <Row>\r\n      {show === true && <AlertForm setShow={setShow} success={success} loginMsg={loginMsg} />}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        {user === null && <LoginForm hLog={hLog} setUsername={setUsername} setPass={setPass} />}\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default Actions;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst DCard = ({ rm, idx }) => (\r\n  <div>\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Text className=\"text-center\">\r\n          {idx + 1}\r\n          .\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <strong>Vastaanottaja:</strong>\r\n          {' '}\r\n          {rm.to}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <strong>Aihe:</strong>\r\n          {' '}\r\n          {rm.title}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <strong>Muistutus:</strong>\r\n          <br />\r\n          {' '}\r\n          {rm.message}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <strong>Generoitu:</strong>\r\n          {' '}\r\n          {rm.updated_at}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nexport default DCard;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport DCard from './DCard';\r\n\r\n// tähän ruudukkoon tuodaan haetut muistutukset kortteina. mikäli muistutuksia ei jostain syystä\r\n// saada tuotua, luo yhden kortin, jossa asiasta mainitaan\r\nconst DataGrid = ({ rem }) => {\r\n  if (!Array.isArray(rem)) {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n            <Col>\r\n              <DCard rm={[{\"to\": \"testivastaanottaja\", \"title\": \"testikortti\", \"message\": \"Jos näet tämän viestin, ohjelma ei saa dataa palvelimelta\", \"updated_at\": new Date() }]} idx={0} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Container className=\"cardContainer\">\r\n        <Row xs={1} md={2} lg={3} className=\"g-4\">\r\n          {rem.map((r, idx) => (\r\n            <Col key={idx}>\r\n              <DCard rm={r} idx={idx} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataGrid;\r\n","import React from 'react';\r\n\r\nimport { Form, Button } from 'react-bootstrap';\r\nconst SearchForm = ({ search, setFlt }) => (\r\n  <Form onSubmit={search}>\r\n    <Form.Group className=\"mb-3\" controlId=\"searchFunc\">\r\n      <Form.Label>Hae</Form.Label>\r\n      <Form.Control id=\"ctrl\" type=\"text\" placeholder=\"hakuteksti\" onChange={({ target }) => setFlt(target.value)} />\r\n    </Form.Group>\r\n    <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n  </Form>\r\n);\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst LoggedInForm = ({ user }) => (\r\n  <Container>\r\n    <p className=\"text-light\" id=\"logged\">\r\n      Kirjautuneena\r\n      {' '}\r\n      {user.uname}\r\n      {' '}\r\n    </p>\r\n  </Container>\r\n);\r\n\r\nexport default LoggedInForm;\r\n","import React from 'react';\r\nimport { Container, Navbar, Button } from 'react-bootstrap';\r\nimport SearchForm from './SearchForm';\r\nimport LoggedInForm from './LoggedInForm';\r\n\r\n// Header, johon on istutettu \r\nconst Header = ({ user, search, setFlt, logout }) => {\r\n  \r\n  return (\r\n    <Navbar className=\"navbar fixed-top navbar-light bg-secondary\">\r\n      <Container>\r\n        <Navbar.Brand className=\"text-light\" href=\"#home\">Muistutusten selaus</Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          {user !== null && <LoggedInForm user={user}/>}\r\n          {user !== null && <SearchForm search={search} setFlt={setFlt} />}\r\n          <p> </p>\r\n          {user !== null && <Button className=\"text-light ml-5\" onClick={logout}>Kirjaudu ulos</Button>}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n//Footer pääsivulle\r\nconst Footer = () => (\r\n  <footer>\r\n    <p className=\"foottext\">Riveria</p>\r\n    <p>\r\n      Photo by\r\n      {' '}\r\n      <a href=\"https://unsplash.com/@freegraphictoday?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">AbsolutVision</a>\r\n      {' '}\r\n      on\r\n      {' '}\r\n      <a href=\"https://unsplash.com/@freegraphictoday?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\r\n    </p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import axios from 'axios';\r\nimport config from '../config'\r\n\r\nconst baseUrl = config.api_url + '/login';\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  // console.log(\"loginservice:\", response)\r\n  return response.data.token;\r\n};\r\n\r\nconst exportPackage = { login };\r\n\r\nexport default exportPackage;","\r\n// käsittelee virheilmoitukset. Toistaiseksi lähinnä vanhentuneelle tokenille ja jos yhteys\r\n// backendiin katkeaa\r\nconst errorManage = (error) => {\r\n    if (error.message === \"Request failed with status code 401\") {\r\n        console.log(error);\r\n        window.alert(\"Istunto vanhentunut\");\r\n    }\r\n    else if (error.message === \"Network Error\") {\r\n        window.alert(\"Yhteys ei toimi\");\r\n    }\r\n    else {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport default errorManage;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-console */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { useState, useEffect } from 'react';\r\nimport remindServe from './services/remainders';\r\nimport Actions from './components/Actions';\r\nimport DataGrid from './components/DataGrid';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport loginService from './services/login';\r\nimport errorManager from './controllers/errorctrl';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [remainders, setRemainders] = useState([]);\r\n  const [filtr, setFiltr] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [loginMsg, setLoginMsg] = useState('');\r\n\r\n  // mikäli käyttäjä on jo kirjautunut, hakee selaimen muistista kirjautumistiedot\r\n  // ja hakee muistutukset.\r\n  useEffect(() => {\r\n    const fetchRemainders = async () => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\r\n    if (loggedUserJSON) {\r\n      const usr = JSON.parse(loggedUserJSON);\r\n      setUser(usr);\r\n      remindServe.setToken(usr.token);\r\n      const refreshRemind = await remindServe.getAsyncLatest();\r\n      setRemainders(refreshRemind);\r\n    }\r\n    }\r\n    fetchRemainders();\r\n  }, []);\r\n\r\n  // hakufunktio. etsii annetun hakusanan sisältäviä muistutuksia. Mikäli token on \r\n  // vanhentunut, palauttaa virheilmoituksen ja kirjautuu ulos.\r\n  const searchRemainders = (event) => {\r\n    event.preventDefault();\r\n    remindServe\r\n      .getSearch(filtr)\r\n      .then((response) => {\r\n        setRemainders(response);\r\n      }).catch((e) => {\r\n        errorManager(e);\r\n        logout();\r\n      });\r\n  };\r\n\r\n  // kirjautuminen. hakee käyttäjänimen ja salasanan perusteella backendilta tokenin, ja tallentaa\r\n  // sen selaimen muistiin. Kirjautumisen onnistuessa hakee muistutuksen näkyville, ja ilmoittaa\r\n  // onnistumisesta vihreällä ikkunalla. Epäonnistuminen ilmoitetaan punaisella ikkunalla.\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const kaytt = {\r\n        uname: username,\r\n        token: '',\r\n      };\r\n      \r\n      kaytt.token = await loginService.login({\r\n        username, password,\r\n      });\r\n      \r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(kaytt),\r\n      );\r\n\r\n      remindServe.setToken(kaytt.token);\r\n      setUser(kaytt);\r\n      setUsername('');\r\n      setPassword('');\r\n      const tempRemind = await remindServe.getAsyncLatest();\r\n      setRemainders(tempRemind);\r\n      setLoginMsg('Olet nyt kirjautunut!')\r\n      setSuccess(true);\r\n      setShow(true);\r\n    } catch (exception) {\r\n      setLoginMsg('Väärä käyttäjätunnus tai salasana!');\r\n      setSuccess(false);\r\n      setShow(true);\r\n    }\r\n  };\r\n\r\n  // uloskirjautuminen. poistaa kirjautumistiedot selaimen muistista ja lataa sivun uudestaan.\r\n  const logout = () => {\r\n    window.localStorage.removeItem('loggedUser');\r\n    window.location.reload();\r\n  };\r\n\r\n  // varsinainen näkymä. Header-osiossa otsikko, ehtojen täyttyessä kuka on kirjautunut, haku ja\r\n  // uloskirjautuminen. Pääosassa näytetään joko kirjautumisikkuna tai muistutuskortit. Footerissa\r\n  // organisaation tiedot.\r\n  return (\r\n    <div className=\"App\">\r\n      <Header user={user} search={searchRemainders} setFlt={setFiltr} logout={logout} />\r\n      <Actions\r\n        hLog={handleLogin}\r\n        setUsername={setUsername}\r\n        setPass={setPassword}\r\n        user={user}\r\n        setShow={setShow}\r\n        show={show}\r\n        success={success}\r\n        loginMsg={loginMsg}\r\n      />\r\n      {user !== null && <DataGrid rem={remainders} />}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  // eslint-disable-next-line react/jsx-filename-extension\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}